// operations.h - спецификация класса Operations
#pragma once
#include "shape.h"
#include "square.h"
#include "rectangle.h"

class Operations {
private:
    Shape** _shapesList = 0;   // Указатель на фигуры                    
    int _countShapes = 0;      // Количество фигур
    bool isValid(int i);       // Приватный метод проверки на правильность
public:
    // Конструктор по умолчанию
    Operations() = default;

    // Констуктор с заданным количеством
    Operations(int count);

    // Декструктор с очищением дин.памяти
    ~Operations();

    // Публичный метод для сравнения фигур по площадям.
    // Входные параметры: номер фигуры x1, номер фигуры x2.
    // Возвращаемых значений нет.
    void Compare(int x1, int x2);

    // Публичный метод для определения факта пересечения фигур.
    // Входные параметры: номер фигуры x1, номер фигуры x2.
    // Возвращаемых значений нет.
    void IsIntersect(int x1, int x2);

    // Публичный метод для определения факта включения фигуры в фигуру.
    // Входные параметры: номер фигуры x1, номер фигуры x2.
    // Возвращаемых значений нет.
    void IsInclude(int x1, int x2);

    // Публичный метод для поворота фигуры.
    // Входные параметры: номер фигуры i, угол поворота x.
    // Возвращаемых значений нет.
    void Rotate(int i, int x);

    // Публичный метод для перемещения фигуры.
    // Входные параметры: номер фигуры i, смещение x, смещение y.
    // Возвращаемых значений нет.
    void Move(int i, double x, double y);

    // Публичный метод для вывода всех фигур.
    // Входных параметров нет.
    // Возвращаемых значений нет.
    void printShapes();
};
