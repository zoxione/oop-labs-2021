#pragma once

// Спецификация класса
class Stack {
private:
    // Динамический массив
    int *_ptr = nullptr;
    // Размер массива
    int _size = 0;
    // Количество элементов
    int _count = 0;

    // Приватный метод для очищения динамической памяти.
    // Входных параметров нет.
    // Возвращаемых значений нет.
    void destroy() { if (_ptr) { delete[] _ptr; } };

public:
    // Конструктор по умолчанию
    Stack();

    // Конструктор с заданным размером
    Stack(int x);

    // Констуктор копирования
    Stack(const Stack& s);

    // Деструктор с очищением динамической памяти
    ~Stack();

    // Операция присваивания
    Stack& operator=(const Stack& s);

    // Публичный метод для получения размера стека.
    // Входных параметров нет.
    // Возвращаемое значение: _size.
    int getSize();

    // Публичный метод для получения количества элементов в стеке.
    // Входных параметров нет.
    // Возвращаемое значение: _count.
    int getCount();
    
    // Публичный метод для получения элемента стека по индексу.
    // Входной параметр: индекс элемента.
    // Возвращаемое значение: _ptr[i].
    int getValue(int i);

    // Публичный метод для добавления элемента в стек.
    // Входной параметр: новый элемент x.
    // Возвращаемых значений нет.
    void push(int x);

    // Публичный метод для удаления элемента из стека.
    // Входных параметров нет.
    // Возвращаемых значений нет.
    void pop();

    // Публичный метод для проверки стека на пустоту.
    // Входных параметров нет.
    // Возвращаемое значение: булевская константа.
    bool isEmpty();

    // Публичный метод для просмотра верхушки стека.
    // Входных параметров нет.
    // Возвращаемое значение: последний элемент.
    int back();
};
