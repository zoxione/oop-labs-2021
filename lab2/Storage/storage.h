// storage.h - спецификация класса Storage
#pragma once
#include "container.h"
#include "queue.h"
#include "stack.h"

class Storage {
private:
    int _countStack = 0;          // Кол-во стеков
    int _countQueue = 0;          // Кол-во очередей
    Container** _containerList;   // Указатель на контейнеры
    bool isValid(int i);          // Приватный метод проверки на правильность
public:
    // Конструктор по умолчанию
    Storage() = default;

    // Конструктор с заданным количеством
    Storage(int n, int m);

    // Деструктор с очищением дин. памяти
    ~Storage();

    // Публичный метод для вывода хранилища.
    // Входных параметров нет.
    // Возвращаемых значений нет.
    void printStorage();

    // Публичный метод для добавления элемента в заданный контейнер.
    // Входные параметры: номер контейнера i, новый элемент x.
    // Возвращаемых значений нет.
    void push(int i, int x);

    // Публичный метод для удаления элемента из заданного контейнера.
    // Входной параметр: номер контейнера i.
    // Возвращаемых значений нет.
    void pop(int i);

    // Публичный метод для вывода наполненности заданного контейнера.
    // Входной параметр: номер контейнера i.
    // Возвращаемых значений нет.
    void printEmpty(int i);

    // Публичный метод для вывода головки очереди или верхушки стека.
    // Входной параметр: номер контейнера i.
    // Возвращаемых значений нет.
    void printFront(int i);
};
